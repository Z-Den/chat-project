// App.js
import { ChatProvider, useChat } from './contexts/ChatContext';
import { Input } from './components/Input';
import { ChatHistory } from './components/ChatHistory';
import { ChatsList } from './components/ChatsList';
import './App.css';
import new_chat_white from './images/wand_stars_white.png';
import new_chat_black from './images/wand_stars_black.png';

function AppContent() {
    const {
        chats,
        activeChat,
        setActiveChat,
        addMessage,
        addChat,
        getActiveChat
    } = useChat();

    const handleSendMessage = (message) => {
        if (!message.trim()) return;

        addMessage(activeChat, message);

        // Добавляем ответ бота
        setTimeout(() => {
            addMessage(activeChat, "Это автоматический ответ. В реальном приложении здесь был бы ответ от ChatGPT API.", false);
        }, 500);
    };

    const handleNewChat = () => {
        addChat();
    };

    const currentChat = getActiveChat();

    return (
        <div className="App">
            <aside className="sidebar">
                <button className="new-chat-btn" onClick={handleNewChat}>
                    Новый чат <img src={new_chat_black} alt={"new chat"}/>
                </button>
                <ChatsList
                    chats={chats}
                    activeChat={activeChat}
                    onSelectChat={setActiveChat}
                />
            </aside>
            <main className="chat-container">
                <ChatHistory messages={currentChat.messages} />
                <Input onSend={handleSendMessage} />
                <span className='info'>Generated by AI. For reference only</span>
            </main>
        </div>
    );
}

function App() {
    return (
        <ChatProvider>
            <AppContent />
        </ChatProvider>
    );
}

export default App;